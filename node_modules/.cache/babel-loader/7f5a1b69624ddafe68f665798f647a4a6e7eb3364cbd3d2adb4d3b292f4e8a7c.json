{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\dev\\\\FreshroadReact\\\\src\\\\pages\\\\Chatpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../App.css'; // Ensure correct path to your CSS file\nimport freshroadlogo from '../images/freshroadlogo.png';\nimport avatarImage from '../images/callrepai.png'; // Add the avatar image path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterfacePage = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: \"Hey there! ðŸ˜„ How's it going? I'm Luna, ready to chat about anything and everything. What's on your mind today? âœ¨\"\n  }]);\n  const [input, setInput] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [spokenText, setSpokenText] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('English');\n  const languageCodes = {\n    English: 'en-US',\n    EspaÃ±ol: 'es-ES',\n    ä¸­æ–‡: 'zh-CN'\n  };\n  const handleSendMessage = () => {\n    if (input.trim() !== '') {\n      setMessages([...messages, {\n        sender: 'user',\n        text: input\n      }]);\n      setInput('');\n      setTimeout(() => {\n        setMessages(prevMessages => [...prevMessages, {\n          sender: 'bot',\n          text: 'Thanks for sharing! How can I help further? ðŸ˜Š'\n        }]);\n      }, 1000); // Simulated bot response delay\n    }\n  };\n  const handleVoiceInput = () => {\n    if (isListening) {\n      setIsListening(false);\n      setSpokenText('');\n      handleSendMessage(spokenText);\n    } else {\n      setIsListening(true);\n      setSpokenText('Listening...');\n    }\n  };\n  const handleLanguageChange = language => {\n    setSelectedLanguage(language);\n  };\n  useEffect(() => {\n    if (isListening) {\n      const mockSpeech = setTimeout(() => {\n        setSpokenText('This is a sample spoken message');\n        setIsListening(false);\n      }, 3000); // Simulate speech input delay\n\n      return () => clearTimeout(mockSpeech);\n    }\n  }, [isListening]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"bg-white border-b w-full max-w-3xl\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center h-16 px-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: freshroadlogo,\n          alt: \"Fresh Road Logo\",\n          className: \"w-35 h-8 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-bold text-gray-900\",\n          children: \"Chat with Luna\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow p-4 overflow-y-auto w-full max-w-3xl\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${message.sender === 'bot' ? 'justify-start' : 'justify-end'} mb-4 items-center`,\n        children: [message.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatarImage,\n          alt: \"Chat Bot Avatar\",\n          className: \"w-10 h-10 rounded-full border border-gray-300 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `max-w-xs px-4 py-2 rounded-lg shadow ${message.sender === 'bot' ? 'bg-white text-gray-800' : 'bg-cyan-400 text-white'}`,\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border-t p-4 w-full max-w-3xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"flex-grow border rounded-lg px-4 py-2 focus:outline-none focus:ring focus:ring-cyan-300\",\n          placeholder: \"Type your message...\",\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          className: \"ml-2 px-4 py-2 bg-cyan-400 text-white rounded-lg hover:bg-cyan-500\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleVoiceInput,\n          className: `px-4 py-2 rounded-lg text-white ${isListening ? 'bg-red-500' : 'bg-cyan-400'} hover:bg-cyan-500`,\n          children: isListening ? 'Stop Listening' : 'Start Voice Input'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedLanguage,\n          onChange: e => handleLanguageChange(e.target.value),\n          className: \"ml-4 px-4 py-2 border rounded-lg\",\n          children: Object.keys(languageCodes).map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: lang,\n            children: lang\n          }, lang, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterfacePage, \"X8lkBtMrzWY0ChraB4BfTWFKHMg=\");\n_c = ChatInterfacePage;\nexport default ChatInterfacePage;\nvar _c;\n$RefreshReg$(_c, \"ChatInterfacePage\");","map":{"version":3,"names":["React","useState","useEffect","freshroadlogo","avatarImage","jsxDEV","_jsxDEV","ChatInterfacePage","_s","messages","setMessages","sender","text","input","setInput","isListening","setIsListening","spokenText","setSpokenText","selectedLanguage","setSelectedLanguage","languageCodes","English","EspaÃ±ol","ä¸­æ–‡","handleSendMessage","trim","setTimeout","prevMessages","handleVoiceInput","handleLanguageChange","language","mockSpeech","clearTimeout","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","type","placeholder","value","onChange","e","target","onClick","Object","keys","lang","_c","$RefreshReg$"],"sources":["C:/Users/allen/dev/FreshroadReact/src/pages/Chatpage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../App.css'; // Ensure correct path to your CSS file\r\nimport freshroadlogo from '../images/freshroadlogo.png';\r\nimport avatarImage from '../images/callrepai.png'; // Add the avatar image path\r\n\r\nconst ChatInterfacePage = () => {\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      sender: 'bot',\r\n      text: \"Hey there! ðŸ˜„ How's it going? I'm Luna, ready to chat about anything and everything. What's on your mind today? âœ¨\",\r\n    },\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [spokenText, setSpokenText] = useState('');\r\n  const [selectedLanguage, setSelectedLanguage] = useState('English');\r\n  const languageCodes = {\r\n    English: 'en-US',\r\n    EspaÃ±ol: 'es-ES',\r\n    ä¸­æ–‡: 'zh-CN',\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (input.trim() !== '') {\r\n      setMessages([...messages, { sender: 'user', text: input }]);\r\n      setInput('');\r\n      setTimeout(() => {\r\n        setMessages((prevMessages) => [\r\n          ...prevMessages,\r\n          {\r\n            sender: 'bot',\r\n            text: 'Thanks for sharing! How can I help further? ðŸ˜Š',\r\n          },\r\n        ]);\r\n      }, 1000); // Simulated bot response delay\r\n    }\r\n  };\r\n\r\n  const handleVoiceInput = () => {\r\n    if (isListening) {\r\n      setIsListening(false);\r\n      setSpokenText('');\r\n      handleSendMessage(spokenText);\r\n    } else {\r\n      setIsListening(true);\r\n      setSpokenText('Listening...');\r\n    }\r\n  };\r\n\r\n  const handleLanguageChange = (language) => {\r\n    setSelectedLanguage(language);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isListening) {\r\n      const mockSpeech = setTimeout(() => {\r\n        setSpokenText('This is a sample spoken message');\r\n        setIsListening(false);\r\n      }, 3000); // Simulate speech input delay\r\n\r\n      return () => clearTimeout(mockSpeech);\r\n    }\r\n  }, [isListening]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex flex-col items-center\">\r\n      {/* Header */}\r\n      <nav className=\"bg-white border-b w-full max-w-3xl\">\r\n        <div className=\"flex justify-between items-center h-16 px-4\">\r\n          <img src={freshroadlogo} alt=\"Fresh Road Logo\" className=\"w-35 h-8 mr-2\" />\r\n          <h1 className=\"text-xl font-bold text-gray-900\">Chat with Luna</h1>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Chat Body */}\r\n      <div className=\"flex-grow p-4 overflow-y-auto w-full max-w-3xl\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`flex ${message.sender === 'bot' ? 'justify-start' : 'justify-end'} mb-4 items-center`}\r\n          >\r\n            {message.sender === 'bot' && (\r\n              <img\r\n                src={avatarImage}\r\n                alt=\"Chat Bot Avatar\"\r\n                className=\"w-10 h-10 rounded-full border border-gray-300 mr-2\"\r\n              />\r\n            )}\r\n            <div\r\n              className={`max-w-xs px-4 py-2 rounded-lg shadow ${\r\n                message.sender === 'bot' ? 'bg-white text-gray-800' : 'bg-cyan-400 text-white'\r\n              }`}\r\n            >\r\n              {message.text}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat Input */}\r\n      <div className=\"bg-white border-t p-4 w-full max-w-3xl\">\r\n        <div className=\"flex items-center mb-2\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"flex-grow border rounded-lg px-4 py-2 focus:outline-none focus:ring focus:ring-cyan-300\"\r\n            placeholder=\"Type your message...\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n          />\r\n          <button\r\n            onClick={handleSendMessage}\r\n            className=\"ml-2 px-4 py-2 bg-cyan-400 text-white rounded-lg hover:bg-cyan-500\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n        <div className=\"flex items-center\">\r\n          <button\r\n            onClick={handleVoiceInput}\r\n            className={`px-4 py-2 rounded-lg text-white ${isListening ? 'bg-red-500' : 'bg-cyan-400'} hover:bg-cyan-500`}\r\n          >\r\n            {isListening ? 'Stop Listening' : 'Start Voice Input'}\r\n          </button>\r\n          <select\r\n            value={selectedLanguage}\r\n            onChange={(e) => handleLanguageChange(e.target.value)}\r\n            className=\"ml-4 px-4 py-2 border rounded-lg\"\r\n          >\r\n            {Object.keys(languageCodes).map((lang) => (\r\n              <option key={lang} value={lang}>\r\n                {lang}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterfacePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}