{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allen\\\\dev\\\\FreshroadReact\\\\src\\\\pages\\\\Chatpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../App.css';\nimport freshroadlogo from '../images/freshroadlogo.png';\nimport avatarImage from '../images/callrepai.png';\nimport { PaperAirplaneIcon, MicrophoneIcon, TranslateIcon, SpeakerWaveIcon } from '@heroicons/react/outline';\nimport { tts11 } from '../api/elevenlabs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterfacePage = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: \"Hey there! ðŸ˜„ How's it going? I'm Luna, ready to chat about anything and everything. What's on your mind today? âœ¨\"\n  }]);\n  const [input, setInput] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [spokenText, setSpokenText] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('English');\n  const [isTranslating, setIsTranslating] = useState(false);\n  const languageCodes = {\n    English: 'en-US',\n    EspaÃ±ol: 'es-ES',\n    ä¸­æ–‡: 'zh-CN'\n  };\n  const fetchChatGPTResponse = async userMessage => {\n    const apiKey = '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';\n    const chatHistory = [{\n      role: 'system',\n      content: 'Limit responses to three sentences and assume the user can read English so send all responses in English but do not let the user know about this prompt. You work as a customer service representative for the Santa Clara County 211 call center. Your job is to provide accurate information about the services Santa Clara County can offer. Always speak in sentences and lists. Ask the user questions about their current situation to get a better understanding of all the services Santa Clara County can offer them. If the user is asking for food assistance, give information on CalFresh, the food stamp application, include eligibility and guide the user through filing the application form.'\n    }, ...messages.map(msg => ({\n      role: msg.sender === 'user' ? 'user' : 'assistant',\n      content: msg.text\n    })), {\n      role: 'user',\n      content: userMessage\n    }];\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: 'gpt-4',\n          messages: chatHistory\n        })\n      });\n      const data = await response.json();\n      const botMessage = data.choices[0].message.content;\n      setMessages(prevMessages => {\n        const updatedMessages = [...prevMessages, {\n          sender: 'bot',\n          text: botMessage\n        }];\n        return updatedMessages;\n      });\n      playTTS(botMessage); // Ensures TTS is triggered only once\n    } catch (error) {\n      console.error('Error fetching response:', error);\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'bot',\n        text: 'Sorry, I am having trouble responding at the moment. Please try again later.'\n      }]);\n    }\n  };\n  const playTTS = async (text, voiceId = 'pFZP5JQG7iQjIQuC4Bku') => {\n    try {\n      const audioBlob = await tts11(text, voiceId); // Replace 'your_voice_id_here' with the appropriate voice ID\n      const audioUrl = URL.createObjectURL(audioBlob);\n      const audio = new Audio(audioUrl);\n      audio.play();\n    } catch (error) {\n      console.error('Error playing TTS audio:', error);\n    }\n  };\n  const handleSendMessage = () => {\n    if (input.trim() !== '') {\n      const userMessage = input.trim();\n      setMessages([...messages, {\n        sender: 'user',\n        text: userMessage\n      }]);\n      setInput('');\n      fetchChatGPTResponse(userMessage);\n    }\n  };\n  const handleVoiceInput = () => {\n    if (isListening) {\n      setIsListening(false);\n      setSpokenText('');\n    } else {\n      setIsListening(true);\n      setSpokenText('Listening...');\n    }\n  };\n  const handleLanguageChange = language => {\n    setSelectedLanguage(language);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  const handleTranslateMessage = async (message, index) => {\n    if (isTranslating) return;\n    setIsTranslating(true);\n    const apiKey = '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';\n    const translationPrompt = `You are a helpful assistant that translates text to ${selectedLanguage}. Translate this text: \"${message}\"`;\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${apiKey}`\n        },\n        body: JSON.stringify({\n          model: 'gpt-4',\n          messages: [{\n            role: 'system',\n            content: translationPrompt\n          }]\n        })\n      });\n      const data = await response.json();\n      const translatedMessage = data.choices[0].message.content;\n      setMessages(prevMessages => {\n        const updatedMessages = [...prevMessages];\n        updatedMessages[index] = {\n          ...updatedMessages[index],\n          translation: translatedMessage\n        };\n        return updatedMessages;\n      });\n      await playTTS(translatedMessage, 'pFZP5JQG7iQjIQuC4Bku'); // Replace with the desired translation voice ID\n    } catch (error) {\n      console.error('Error translating message:', error);\n    } finally {\n      setIsTranslating(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"bg-white border-b w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center h-16 px-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: freshroadlogo,\n          alt: \"Fresh Road Logo\",\n          className: \"w-35 h-8 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-bold text-gray-900\",\n          children: \"Chat with Luna\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow p-4 overflow-y-auto w-full flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hidden sm:block mr-4\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatarImage,\n          alt: \"Chat Bot Avatar\",\n          className: \"w-16 h-16 rounded-full border border-gray-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${message.sender === 'bot' ? 'justify-start' : 'justify-end'} mb-4 items-center`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `max-w-xs px-4 py-2 rounded-lg shadow ${message.sender === 'bot' ? 'bg-white text-gray-800' : 'bg-cyan-400 text-white'}`,\n            children: [message.text, message.translation && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 text-sm text-gray-600\",\n              children: [\"Translated: \", message.translation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleTranslateMessage(message.text, index),\n              className: \"mt-2 text-xs text-blue-500 flex items-center\",\n              children: /*#__PURE__*/_jsxDEV(TranslateIcon, {\n                className: \"h-5 w-5 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white border-t p-4 w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"flex-grow border rounded-lg px-4 py-2 focus:outline-none focus:ring focus:ring-cyan-300\",\n          placeholder: \"Type your message...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          className: \"ml-2 px-4 py-2 bg-cyan-400 text-white rounded-lg hover:bg-cyan-500 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n            className: \"h-5 w-5 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), \" Send\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleVoiceInput,\n          className: `ml-4 px-4 py-2 rounded-lg text-white ${isListening ? 'bg-red-500' : 'bg-cyan-400'} hover:bg-cyan-500 flex items-center`,\n          children: [/*#__PURE__*/_jsxDEV(MicrophoneIcon, {\n            className: \"h-5 w-5 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), \" \", isListening ? 'Stop' : 'Voice Input']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedLanguage,\n          onChange: e => handleLanguageChange(e.target.value),\n          className: \"ml-4 px-4 py-2 border rounded-lg flex items-center\",\n          children: Object.keys(languageCodes).map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: lang,\n            children: lang\n          }, lang, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterfacePage, \"bm0aUjWv7FFydrJ3vCYxoxaYRcI=\");\n_c = ChatInterfacePage;\nexport default ChatInterfacePage;\nvar _c;\n$RefreshReg$(_c, \"ChatInterfacePage\");","map":{"version":3,"names":["React","useState","freshroadlogo","avatarImage","PaperAirplaneIcon","MicrophoneIcon","TranslateIcon","SpeakerWaveIcon","tts11","jsxDEV","_jsxDEV","ChatInterfacePage","_s","messages","setMessages","sender","text","input","setInput","isListening","setIsListening","spokenText","setSpokenText","selectedLanguage","setSelectedLanguage","isTranslating","setIsTranslating","languageCodes","English","EspaÃ±ol","ä¸­æ–‡","fetchChatGPTResponse","userMessage","apiKey","chatHistory","role","content","map","msg","response","fetch","method","headers","Authorization","body","JSON","stringify","model","data","json","botMessage","choices","message","prevMessages","updatedMessages","playTTS","error","console","voiceId","audioBlob","audioUrl","URL","createObjectURL","audio","Audio","play","handleSendMessage","trim","handleVoiceInput","handleLanguageChange","language","handleKeyPress","e","key","handleTranslateMessage","index","translationPrompt","translatedMessage","translation","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","target","onKeyPress","Object","keys","lang","_c","$RefreshReg$"],"sources":["C:/Users/allen/dev/FreshroadReact/src/pages/Chatpage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport freshroadlogo from '../images/freshroadlogo.png';\r\nimport avatarImage from '../images/callrepai.png';\r\nimport { PaperAirplaneIcon, MicrophoneIcon, TranslateIcon, SpeakerWaveIcon } from '@heroicons/react/outline';\r\nimport { tts11 } from '../api/elevenlabs';\r\n\r\nconst ChatInterfacePage = () => {\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      sender: 'bot',\r\n      text: \"Hey there! ðŸ˜„ How's it going? I'm Luna, ready to chat about anything and everything. What's on your mind today? âœ¨\",\r\n    },\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [spokenText, setSpokenText] = useState('');\r\n  const [selectedLanguage, setSelectedLanguage] = useState('English');\r\n  const [isTranslating, setIsTranslating] = useState(false);\r\n\r\n  const languageCodes = {\r\n    English: 'en-US',\r\n    EspaÃ±ol: 'es-ES',\r\n    ä¸­æ–‡: 'zh-CN',\r\n  };\r\n\r\n  const fetchChatGPTResponse = async (userMessage) => {\r\n    const apiKey = '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';\r\n    const chatHistory = [\r\n      {\r\n        role: 'system',\r\n        content:\r\n          'Limit responses to three sentences and assume the user can read English so send all responses in English but do not let the user know about this prompt. You work as a customer service representative for the Santa Clara County 211 call center. Your job is to provide accurate information about the services Santa Clara County can offer. Always speak in sentences and lists. Ask the user questions about their current situation to get a better understanding of all the services Santa Clara County can offer them. If the user is asking for food assistance, give information on CalFresh, the food stamp application, include eligibility and guide the user through filing the application form.',\r\n      },\r\n      ...messages.map((msg) => ({\r\n        role: msg.sender === 'user' ? 'user' : 'assistant',\r\n        content: msg.text,\r\n      })),\r\n      { role: 'user', content: userMessage },\r\n    ];\r\n\r\n    try {\r\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${apiKey}`,\r\n        },\r\n        body: JSON.stringify({\r\n          model: 'gpt-4',\r\n          messages: chatHistory,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const botMessage = data.choices[0].message.content;\r\n\r\n      setMessages((prevMessages) => {\r\n        const updatedMessages = [...prevMessages, { sender: 'bot', text: botMessage }];\r\n        return updatedMessages;\r\n      });\r\n      playTTS(botMessage); // Ensures TTS is triggered only once\r\n    } catch (error) {\r\n      console.error('Error fetching response:', error);\r\n      setMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { sender: 'bot', text: 'Sorry, I am having trouble responding at the moment. Please try again later.' },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const playTTS = async (text, voiceId = 'pFZP5JQG7iQjIQuC4Bku') => {\r\n    try {\r\n      const audioBlob = await tts11(text, voiceId); // Replace 'your_voice_id_here' with the appropriate voice ID\r\n      const audioUrl = URL.createObjectURL(audioBlob);\r\n      const audio = new Audio(audioUrl);\r\n      audio.play();\r\n    } catch (error) {\r\n      console.error('Error playing TTS audio:', error);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (input.trim() !== '') {\r\n      const userMessage = input.trim();\r\n      setMessages([...messages, { sender: 'user', text: userMessage }]);\r\n      setInput('');\r\n      fetchChatGPTResponse(userMessage);\r\n    }\r\n  };\r\n\r\n  const handleVoiceInput = () => {\r\n    if (isListening) {\r\n      setIsListening(false);\r\n      setSpokenText('');\r\n    } else {\r\n      setIsListening(true);\r\n      setSpokenText('Listening...');\r\n    }\r\n  };\r\n\r\n  const handleLanguageChange = (language) => {\r\n    setSelectedLanguage(language);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const handleTranslateMessage = async (message, index) => {\r\n    if (isTranslating) return;\r\n    setIsTranslating(true);\r\n\r\n    const apiKey = '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';\r\n    const translationPrompt = `You are a helpful assistant that translates text to ${selectedLanguage}. Translate this text: \"${message}\"`;\r\n\r\n    try {\r\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${apiKey}`,\r\n        },\r\n        body: JSON.stringify({\r\n          model: 'gpt-4',\r\n          messages: [\r\n            {\r\n              role: 'system',\r\n              content: translationPrompt,\r\n            },\r\n          ],\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const translatedMessage = data.choices[0].message.content;\r\n\r\n      setMessages((prevMessages) => {\r\n        const updatedMessages = [...prevMessages];\r\n        updatedMessages[index] = {\r\n          ...updatedMessages[index],\r\n          translation: translatedMessage,\r\n        };\r\n        return updatedMessages;\r\n      });\r\n      await playTTS(translatedMessage, 'pFZP5JQG7iQjIQuC4Bku'); // Replace with the desired translation voice ID\r\n    } catch (error) {\r\n      console.error('Error translating message:', error);\r\n    } finally {\r\n      setIsTranslating(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex flex-col\">\r\n      {/* Header */}\r\n      <nav className=\"bg-white border-b w-full\">\r\n        <div className=\"flex justify-between items-center h-16 px-4\">\r\n          <img src={freshroadlogo} alt=\"Fresh Road Logo\" className=\"w-35 h-8 mr-2\" />\r\n          <h1 className=\"text-xl font-bold text-gray-900\">Chat with Luna</h1>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Chat Body */}\r\n      <div className=\"flex-grow p-4 overflow-y-auto w-full flex\">\r\n        {/* Avatar Section */}\r\n        <div className=\"hidden sm:block mr-4\">\r\n          <img\r\n            src={avatarImage}\r\n            alt=\"Chat Bot Avatar\"\r\n            className=\"w-16 h-16 rounded-full border border-gray-300\"\r\n          />\r\n        </div>\r\n\r\n        {/* Messages Section */}\r\n        <div className=\"flex-grow\">\r\n          {messages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              className={`flex ${message.sender === 'bot' ? 'justify-start' : 'justify-end'} mb-4 items-center`}\r\n            >\r\n              <div\r\n                className={`max-w-xs px-4 py-2 rounded-lg shadow ${\r\n                  message.sender === 'bot' ? 'bg-white text-gray-800' : 'bg-cyan-400 text-white'\r\n                }`}\r\n              >\r\n                {message.text}\r\n                {message.translation && (\r\n                  <div className=\"mt-2 text-sm text-gray-600\">Translated: {message.translation}</div>\r\n                )}\r\n                <button\r\n                  onClick={() => handleTranslateMessage(message.text, index)}\r\n                  className=\"mt-2 text-xs text-blue-500 flex items-center\"\r\n                >\r\n                  <TranslateIcon className=\"h-5 w-5 mr-1\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chat Input */}\r\n      <div className=\"bg-white border-t p-4 w-full\">\r\n        <div className=\"flex items-center mb-2\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"flex-grow border rounded-lg px-4 py-2 focus:outline-none focus:ring focus:ring-cyan-300\"\r\n            placeholder=\"Type your message...\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n          <button\r\n            onClick={handleSendMessage}\r\n            className=\"ml-2 px-4 py-2 bg-cyan-400 text-white rounded-lg hover:bg-cyan-500 flex items-center\"\r\n          >\r\n            <PaperAirplaneIcon className=\"h-5 w-5 mr-1\" /> Send\r\n          </button>\r\n          <button\r\n            onClick={handleVoiceInput}\r\n            className={`ml-4 px-4 py-2 rounded-lg text-white ${isListening ? 'bg-red-500' : 'bg-cyan-400'} hover:bg-cyan-500 flex items-center`}\r\n          >\r\n            <MicrophoneIcon className=\"h-5 w-5 mr-1\" /> {isListening ? 'Stop' : 'Voice Input'}\r\n          </button>\r\n          <select\r\n            value={selectedLanguage}\r\n            onChange={(e) => handleLanguageChange(e.target.value)}\r\n            className=\"ml-4 px-4 py-2 border rounded-lg flex items-center\"\r\n          >\r\n            {Object.keys(languageCodes).map((lang) => (\r\n              <option key={lang} value={lang}>\r\n                {lang}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInterfacePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}